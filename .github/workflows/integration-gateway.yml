name: test with deployed gateway

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read

env:
  GATEWAY_CHECKOUT_DIR: "gateway"
  S3_ENDPOINT: "https://s3.fr-par.scw.cloud"
  S3_REGION: "fr-par"

jobs:
  test-deployed-gateway:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup-poetry

      - uses: actions/checkout@v3
        with:
          repository: scaleway/serverless-gateway
          path: $GATEWAY_CHECKOUT_DIR

      - name: Install Scaleway CLI
        uses: ./$GATEWAY_CHECKOUT_DIR/.github/actions/setup-scaleway-cli
        with:
          scw-version: "2.13.0"
          scw-access-key: ${{ secrets.SCW_ACCESS_KEY }}
          scw-secret-key: ${{ secrets.SCW_SECRET_KEY }}
          scw-default-project-id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          scw-default-organization-id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}

      - name: Create Gateway namespace
        working-directory: $GATEWAY_CHECKOUT_DIR
        run: |
          make create-namespace
          until [ $(make check-namespace -s) == ready ]; do sleep 10; done

      - name: Create Gateway container
        working-directory: $GATEWAY_CHECKOUT_DIR
        # We need to truncate gateway.env as it will override our env vars
        run: |
          truncate -s 0 gateway.env
          make create-container
          make deploy-container
          until [ $(make check-container -s) == ready ]; do sleep 10; done
        env:
          SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}

      - name: Install s3cmd
        run: pip install s3cmd

      - name: Create S3 bucket
        working-directory: $GATEWAY_CHECKOUT_DIR
        run: |
          make set-up-s3-cli
          make create-s3-bucket
        env:
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}

      - name: Run integration tests
        run: |
          pushd $GATEWAY_CHECKOUT_DIR
          export GATEWAY_HOST=$(make get-gateway-host -s)
          popd
          poetry run pytest integrations/gateway -n $(nproc --all)
        env:
          SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
          GATEWAY_S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}

      - name: Delete S3 bucket
        run: make delete-bucket
        env:
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
        if: always()

      - name: Delete Gateway namespace and container
        run: make delete-namespace
        if: always()
